[{"path":"https://bcgalvin.github.io/metaflow-r/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 metaflow authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Configuring Metaflow","text":"vignette guides process configuring Metaflow using R package. Metaflow uses configuration profiles manage different settings various environments use cases. document explain list, view, update profiles, well provide context Metaflow configuration.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"metaflow-configuration-overview","dir":"Articles","previous_headings":"","what":"Metaflow Configuration Overview","title":"Configuring Metaflow","text":"Metaflow configuration managed JSON files, typically located ~/.metaflowconfig/ directory. configuration files allow customize various aspects Metaflow’s behavior, including: Execution environment (local, AWS, Kubernetes) Data store settings Metadata service configuration Monitoring logging preferences configuration hierarchical, values defined specific level overriding general settings.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"listing-profiles","dir":"Articles","previous_headings":"","what":"Listing Profiles","title":"Configuring Metaflow","text":"view available Metaflow profiles, use list_profiles() function: function returns tibble two columns: - profile_name: name profile - path: full path profile’s JSON configuration file","code":"library(metaflow) list_profiles()"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"viewing-the-active-profile","dir":"Articles","previous_headings":"","what":"Viewing the Active Profile","title":"Configuring Metaflow","text":"see profile currently active contents, use get_active_profile() function: function returns list three elements: - name: name active profile - path: full path active profile’s JSON configuration file - values: contents profile list profile active, warning displayed, function return NULL.","code":"get_active_profile()"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"updating-the-active-profile","dir":"Articles","previous_headings":"","what":"Updating the Active Profile","title":"Configuring Metaflow","text":"change active profile, use update_profile() function. can update name path: function update active profile return contents new profile invisibly.","code":"# Update by name update_profile(name = \"aws\")  # Update by path update_profile(path = \"~/.metaflowconfig/config_aws.json\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"working-with-metaflow-home-directory","dir":"Articles","previous_headings":"","what":"Working with Metaflow Home Directory","title":"Configuring Metaflow","text":"Metaflow uses home directory store configuration files. default, ~/.metaflowconfig/, can overridden using METAFLOW_HOME environment variable. get current Metaflow home directory: function return path Metaflow home directory, NULL valid directory found.","code":"metaflow:::get_metaflow_home()"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"configuration-hierarchy","dir":"Articles","previous_headings":"","what":"Configuration Hierarchy","title":"Configuring Metaflow","text":"Metaflow configuration follows hierarchical structure: Built-defaults ~/.metaflowconfig/config.json ~/.metaflowconfig/config_<PROFILE>.json Environment variables Command line arguments level overrides previous ones, allowing flexible configuration management. functions provide comprehensive way manage Metaflow configurations R. using tools, can easily switch different Metaflow setups various environments projects. detailed information function, can use R help system: Remember proper configuration crucial Metaflow work correctly different environments. Always ensure active profile matches current needs environment setup.","code":"?list_profiles ?get_active_profile ?update_profile"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Installing Metaflow","text":"vignette guides process installing Metaflow using R package. Metaflow Python library, R package provides convenient way install use Metaflow within R environment.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Installing Metaflow","text":"installing Metaflow, ensure : R (version 3.6 later) Python (version 3.7 later)","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"basic-installation","dir":"Articles","previous_headings":"","what":"Basic Installation","title":"Installing Metaflow","text":"install latest version Metaflow, use install_metaflow() function: install Metaflow virtual environment named “r-metaflow”.","code":"library(metaflow) install_metaflow()"},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"specifying-a-version","dir":"Articles","previous_headings":"Customizing the Installation","what":"Specifying a Version","title":"Installing Metaflow","text":"can install specific version Metaflow:","code":"install_metaflow(version = \"2.7.3\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"using-conda","dir":"Articles","previous_headings":"Customizing the Installation","what":"Using Conda","title":"Installing Metaflow","text":"use Conda installation: can specify Conda executable path needed:","code":"install_metaflow(method = \"conda\") install_metaflow(method = \"conda\", conda = \"/path/to/conda\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"using-pip","dir":"Articles","previous_headings":"Customizing the Installation","what":"Using pip","title":"Installing Metaflow","text":"default, install_metaflow() uses pip. can make explicit:","code":"install_metaflow(method = \"virtualenv\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"custom-environment-name","dir":"Articles","previous_headings":"Customizing the Installation","what":"Custom Environment Name","title":"Installing Metaflow","text":"Specify custom environment name:","code":"install_metaflow(envname = \"my-metaflow-env\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"additional-packages","dir":"Articles","previous_headings":"Customizing the Installation","what":"Additional Packages","title":"Installing Metaflow","text":"Install additional Python packages along Metaflow:","code":"install_metaflow(extra_packages = c(\"pandas\", \"numpy\"))"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"specifying-python-version","dir":"Articles","previous_headings":"Customizing the Installation","what":"Specifying Python Version","title":"Installing Metaflow","text":"Choose specific Python version:","code":"install_metaflow(python_version = \"3.8\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"using-existing-python-environments","dir":"Articles","previous_headings":"","what":"Using Existing Python Environments","title":"Installing Metaflow","text":"Instead creating new environment, can use existing Python installation setting environment variables: Use METAFLOW_PYTHON: Set path Python executable use specific Python installation Metaflow. setting either variables, can use Metaflow without running install_metaflow().","code":"Sys.setenv(METAFLOW_PYTHON = \"/path/to/python\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"verifying-the-installation","dir":"Articles","previous_headings":"","what":"Verifying the Installation","title":"Installing Metaflow","text":"installation, verify Metaflow correctly installed: print installed version Metaflow.","code":"library(metaflow) metaflow::metaflow_version()"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Installing Metaflow","text":"encounter issues installation: Ensure required Python version installed. Check write permissions installation directory. using Conda, make sure Conda properly set system. detailed information, refer install_metaflow() function documentation:","code":"?install_metaflow"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Installing Metaflow","text":"now Metaflow installed ready use R environment. information using Metaflow, refer vignettes package official Metaflow documentation.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Metaflow S3 Client","text":"Metaflow S3 Client provides convenient interface interacting Amazon S3 storage. vignette focuses using S3 client list objects S3 buckets.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"setting-up-the-s3-client","dir":"Articles","previous_headings":"","what":"Setting up the S3 Client","title":"Metaflow S3 Client","text":"First, let’s create S3 client: create_s3_client function initializes new S3 client. can specify temporary root directory, bucket name, prefix. connect() method establishes connection S3.","code":"library(metaflow)  # Create a new S3 client s3 <- create_s3_client(   tmproot = \".\",   bucket = \"my-bucket\",   prefix = \"my-prefix\" )  # Connect to S3 s3$connect()"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"customizing-s3-client-configuration","dir":"Articles","previous_headings":"Setting up the S3 Client","what":"Customizing S3 Client Configuration","title":"Metaflow S3 Client","text":"","code":"# Set AWS role s3$set_role(\"arn:aws:iam::123456789012:role/my-role\")  # Set session variables s3$set_session_vars(list(var1 = \"value1\", var2 = \"value2\"))  # Set client parameters s3$set_client_params(list(param1 = \"value1\", param2 = \"value2\"))"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"listing-objects-with-list_paths","dir":"Articles","previous_headings":"","what":"Listing Objects with list_paths","title":"Metaflow S3 Client","text":"list_paths method allows list objects specific S3 path. returns list S3Object representations.","code":"# List objects in the root of the S3 path root_objects <- s3$list_paths()  # List objects with specific keys specific_objects <- s3$list_paths(c(\"path1\", \"path2\"))  # Print the results print(root_objects) print(specific_objects)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"recursive-listing-with-list_recursive","dir":"Articles","previous_headings":"","what":"Recursive Listing with list_recursive","title":"Metaflow S3 Client","text":"list_recursive method allows list objects given prefixes, including subfolders.","code":"# List all objects recursively all_objects <- s3$list_recursive()  # List objects recursively from specific prefixes specific_recursive <- s3$list_recursive(c(\"prefix1\", \"prefix2\"))  # Print the results print(all_objects) print(specific_recursive)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"working-with-s3objects","dir":"Articles","previous_headings":"","what":"Working with S3Objects","title":"Metaflow S3 Client","text":"list_paths list_recursive return lists S3Object instances. S3Object following properties: exists: Logical indicating object exists S3 url: S3 URL object prefix: prefix requested matches object key: key corresponding object size: size object bytes has_info: Logical indicating object contains additional metadata metadata: list user-defined metadata () content_type: content type S3 object last_modified: last modified timestamp encryption: server-side encryption type (set) can access properties object using purrr functions:","code":"library(purrr)  # Print key, size, last_modified, and URL for each object root_objects %>%   walk(~ cat(     \"Key:\", .$key, \"\\n\",     \"Size:\", .$size, \"bytes\\n\",     \"Last Modified:\", .$last_modified, \"\\n\",     \"URL:\", .$url, \"\\n\\n\"   ))  # Extract specific information from all objects keys <- map_chr(root_objects, \"key\") sizes <- map_dbl(root_objects, \"size\") last_modified_times <- map_dbl(root_objects, \"last_modified\")  # Create a data frame of object information object_info <- root_objects %>%   map_dfr(~ list(     key = .$key,     size = .$size,     last_modified = .$last_modified,     url = .$url   ))  print(object_info)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"getting-objects-from-s3","dir":"Articles","previous_headings":"","what":"Getting Objects from S3","title":"Metaflow S3 Client","text":"S3 client provides several methods retrieving objects S3.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"getting-a-single-object","dir":"Articles","previous_headings":"Getting Objects from S3","what":"Getting a Single Object","title":"Metaflow S3 Client","text":"Use get method retrieve single object S3:","code":"# Get a single object s3_object <- s3$get(\"my_key\")  # Print the object print(s3_object)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"getting-multiple-objects","dir":"Articles","previous_headings":"Getting Objects from S3","what":"Getting Multiple Objects","title":"Metaflow S3 Client","text":"retrieve multiple objects , use get_many method:","code":"# Get multiple objects s3_objects <- s3$get_many(c(\"key1\", \"key2\", \"key3\"))  # Print the objects print(s3_objects)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"getting-objects-recursively","dir":"Articles","previous_headings":"Getting Objects from S3","what":"Getting Objects Recursively","title":"Metaflow S3 Client","text":"get_recursive method allows download objects recursively specified keys prefixes:","code":"# Get objects recursively recursive_objects <- s3$get_recursive(c(\"prefix1\", \"prefix2\"))  # Print the objects print(recursive_objects)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"getting-all-objects","dir":"Articles","previous_headings":"Getting Objects from S3","what":"Getting All Objects","title":"Metaflow S3 Client","text":"want retrieve objects prefix set S3 constructor, use get_all method:","code":"# Get all objects all_objects <- s3$get_all()  # Print the objects print(all_objects)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"putting-objects-to-s3","dir":"Articles","previous_headings":"","what":"Putting Objects to S3","title":"Metaflow S3 Client","text":"S3 client also provides methods uploading objects S3.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"putting-a-single-object","dir":"Articles","previous_headings":"Putting Objects to S3","what":"Putting a Single Object","title":"Metaflow S3 Client","text":"Use put method upload single object S3:","code":"# Put a single object url <- s3$put(\"my_key\", \"My object content\")  # Print the URL of the stored object print(url)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"putting-multiple-objects","dir":"Articles","previous_headings":"Putting Objects to S3","what":"Putting Multiple Objects","title":"Metaflow S3 Client","text":"upload multiple objects , use put_many method:","code":"# Put multiple objects results <- s3$put_many(list(   list(key = \"key1\", value = \"Content 1\"),   list(key = \"key2\", value = \"Content 2\") ))  # Print the results print(results)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"putting-files","dir":"Articles","previous_headings":"Putting Objects to S3","what":"Putting Files","title":"Metaflow S3 Client","text":"put_files method allows upload multiple files S3: new methods provide comprehensive set tools retrieving uploading objects S3 using Metaflow S3 client.","code":"# Put multiple files results <- s3$put_files(list(   list(key = \"key1\", path = \"path/to/file1\"),   list(key = \"key2\", path = \"path/to/file2\") ))  # Print the results print(results)"},{"path":"https://bcgalvin.github.io/metaflow-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bryan Galvin. Author, maintainer.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Galvin B (2024). metaflow: R Interface 'Metaflow'. R package version 0.0.1, https://docs.metaflow.org/v/r/,https://github.com/Netflix/metaflow,https://bcgalvin.github.io/metaflow-r/, https://metaflow.org/.","code":"@Manual{,   title = {metaflow: R Interface to 'Metaflow'},   author = {Bryan Galvin},   year = {2024},   note = {R package version 0.0.1, https://docs.metaflow.org/v/r/,https://github.com/Netflix/metaflow,https://bcgalvin.github.io/metaflow-r/},   url = {https://metaflow.org/}, }"},{"path":"https://bcgalvin.github.io/metaflow-r/index.html","id":"id_-metaflow","dir":"","previous_headings":"","what":"R Interface to Metaflow","title":"R Interface to Metaflow","text":"Interface ‘Metaflow’ https://metaflow.org/, framework constructing managing data science workflows. ‘Metaflow’ implements unified API entire data science project lifecycle, initial prototyping way production deployment. Key features encompass version control, scalability, seamless integration popular cloud orchestration tools. R package enables data scientists harness ‘Metaflow’s’ capabilities within preferred R environment, facilitating efficient development deployment data science projects.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Interface to Metaflow","text":"can install development version metaflow GitHub :","code":"devtools::install_github(\"bcgalvin/metaflow-r\")"},{"path":"https://bcgalvin.github.io/metaflow-r/index.html","id":"implemented-features","dir":"","previous_headings":"","what":"Implemented Features","title":"R Interface to Metaflow","text":"metaflow package offers functionality managing Metaflow named profiles provides integration Metaflow S3 client. ’s overview main features:","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/index.html","id":"profile-management","dir":"","previous_headings":"Implemented Features","what":"Profile Management","title":"R Interface to Metaflow","text":"package provides functions manage Metaflow profiles, allowing handle different configurations workflows. respects METAFLOW_HOME METAFLOW_PROFILE environment variables.","code":"# List all profiles in Metaflow home directory list_profiles()  # Get Active Metaflow Profile get_active_profile()  # Update the Metaflow profile by name or path update_profile(name = \"my_profile\") # or update_profile(path = \"/path/to/profile.json\")"},{"path":"https://bcgalvin.github.io/metaflow-r/index.html","id":"s3-client","dir":"","previous_headings":"Implemented Features","what":"S3 Client","title":"R Interface to Metaflow","text":"interface metaflow S3 client implemented R6 classes user-friendly interface built top soon.","code":"# Create a new S3Client s3_client <- create_s3_client(tmproot = \".\", bucket = \"my-bucket\", prefix = \"my-prefix\")  # Connect to S3 s3_client$connect()  # List objects in the root of the S3 path root_objects <- s3_client$list_paths()  # Get a single object s3_object <- s3_client$get(\"my_key\")  # Put a single object url <- s3_client$put(\"my_key\", \"My object content\")  # Get multiple objects s3_objects <- s3_client$get_many(c(\"key1\", \"key2\", \"key3\"))  # Put multiple objects results <- s3_client$put_many(list(   list(key = \"key1\", value = \"Content 1\"),   list(key = \"key2\", value = \"Content 2\") ))  # Get objects recursively recursive_objects <- s3_client$get_recursive(c(\"prefix1\", \"prefix2\"))  # Put multiple files results <- s3_client$put_files(list(   list(key = \"key1\", path = \"path/to/file1\"),   list(key = \"key2\", path = \"path/to/file2\") ))"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 Class — S3","title":"S3 Class — S3","text":"R6 interface Metaflow's S3 client. class provides methods interacting S3, including connecting, listing, retrieving objects. uses S3Client class internally AWS authentication client management.","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"S3 Class — S3","text":"S3$new() S3$connect() S3$set_role() S3$set_session_vars() S3$set_client_params() S3$print() S3$get() S3$get_many() S3$list_paths() S3$list_recursive() S3$get_recursive() S3$get_all() S3$put() S3$put_many() S3$put_files() S3$clone()","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"S3 Class — S3","text":"Create new S3 object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$new(   tmproot = \".\",   bucket = NULL,   prefix = NULL,   run = NULL,   s3root = NULL,   verbose = FALSE,   mf = .globals[[\"mf\"]] )"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"tmproot Character string specifying temporary directory root. bucket Optional character string specifying S3 bucket. prefix Optional character string specifying S3 prefix. run Optional Metaflow Run object FlowSpec. s3root Optional character string specifying S3 root path. verbose Logical, TRUE, print detailed error messages. mf Metaflow object, defaults .globals[\"mf\"].","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-connect-","dir":"Reference","previous_headings":"","what":"Method connect()","title":"S3 Class — S3","text":"Connect S3 client.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$connect()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"Invisible self (method chaining).","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-set-role-","dir":"Reference","previous_headings":"","what":"Method set_role()","title":"S3 Class — S3","text":"Set AWS role S3 client.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$set_role(role)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"role Character string specifying AWS role ARN.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"Invisible self (method chaining).","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-set-session-vars-","dir":"Reference","previous_headings":"","what":"Method set_session_vars()","title":"S3 Class — S3","text":"Set session variables S3 client.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$set_session_vars(session_vars)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"session_vars List session variables.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"Invisible self (method chaining).","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-set-client-params-","dir":"Reference","previous_headings":"","what":"Method set_client_params()","title":"S3 Class — S3","text":"Set client parameters S3 client.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$set_client_params(client_params)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"client_params List client parameters.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"Invisible self (method chaining).","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"S3 Class — S3","text":"Print method S3 objects.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$print(...)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"... Additional arguments passed print (unused).","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"S3 Class — S3","text":"Get single object S3","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$get(key = NULL, return_missing = FALSE, return_info = TRUE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"key Character string S3GetObject representing S3 key return_missing Logical, TRUE, return missing keys S3Objects exists = FALSE return_info Logical, TRUE, fetch content-type user metadata","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"S3Object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-get-many-","dir":"Reference","previous_headings":"","what":"Method get_many()","title":"S3 Class — S3","text":"Get multiple objects S3","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$get_many(keys, return_missing = FALSE, return_info = TRUE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"keys Character vector list S3GetObjects representing S3 keys return_missing Logical, TRUE, return missing keys S3Objects exists = FALSE return_info Logical, TRUE, fetch content-type user metadata","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"list S3Objects","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-list-paths-","dir":"Reference","previous_headings":"","what":"Method list_paths()","title":"S3 Class — S3","text":"List next level paths S3.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$list_paths(keys = NULL)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"keys Optional character vector keys list. NULL, lists S3 root.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"list S3Object representations.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-list-recursive-","dir":"Reference","previous_headings":"","what":"Method list_recursive()","title":"S3 Class — S3","text":"List objects recursively given prefixes.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$list_recursive(keys = NULL)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"keys Optional character vector keys list. NULL, lists S3 root.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"list S3Object representations.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-get-recursive-","dir":"Reference","previous_headings":"","what":"Method get_recursive()","title":"S3 Class — S3","text":"Get objects S3 recursively","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$get_recursive(keys, return_info = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"keys Character vector keys prefixes download recursively return_info Logical, TRUE, fetch content-type user metadata","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"list S3Objects","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-get-all-","dir":"Reference","previous_headings":"","what":"Method get_all()","title":"S3 Class — S3","text":"Get objects prefix set S3 constructor","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$get_all(return_info = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"return_info Logical, TRUE, fetch content-type user metadata","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"list S3Objects","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-put-","dir":"Reference","previous_headings":"","what":"Method put()","title":"S3 Class — S3","text":"Put single object S3","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$put(key, obj, overwrite = TRUE, content_type = NULL, metadata = NULL)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"key Character string S3PutObject representing S3 key obj Object store S3 overwrite Logical, TRUE, overwrite existing object content_type Optional MIME type object metadata Optional list metadata store object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"Character string URL stored object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-put-many-","dir":"Reference","previous_headings":"","what":"Method put_many()","title":"S3 Class — S3","text":"Put multiple objects S3","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$put_many(key_objs, overwrite = TRUE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"key_objs List key-object pairs S3PutObjects overwrite Logical, TRUE, overwrite existing objects","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"List character vectors, containing key URL stored object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-put-files-","dir":"Reference","previous_headings":"","what":"Method put_files()","title":"S3 Class — S3","text":"Put multiple files S3","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$put_files(key_paths, overwrite = TRUE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"key_paths List key-path pairs S3PutObjects overwrite Logical, TRUE, overwrite existing objects","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"S3 Class — S3","text":"List character vectors, containing key URL stored object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"S3 Class — S3","text":"objects class cloneable method.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 Class — S3","text":"","code":"S3$clone(deep = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 Class — S3","text":"deep Whether make deep clone.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":null,"dir":"Reference","previous_headings":"","what":"S3Client Class — S3Client","title":"S3Client Class — S3Client","text":"R6 class manages S3 client AWS authentication access.","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"S3Client Class — S3Client","text":"S3Client$new() S3Client$client() S3Client$error() S3Client$set_role() S3Client$set_session_vars() S3Client$set_client_params() S3Client$clone()","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"S3Client Class — S3Client","text":"Create new S3Client object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3Client Class — S3Client","text":"","code":"S3Client$new(   s3_role_arn = NULL,   s3_session_vars = NULL,   s3_client_params = NULL )"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3Client Class — S3Client","text":"s3_role_arn Optional character string specifying AWS role ARN. s3_session_vars Optional list session variables. s3_client_params Optional list client parameters.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"method-client-","dir":"Reference","previous_headings":"","what":"Method client()","title":"S3Client Class — S3Client","text":"Get S3 client.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"S3Client Class — S3Client","text":"","code":"S3Client$client()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"S3Client Class — S3Client","text":"S3 client object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"method-error-","dir":"Reference","previous_headings":"","what":"Method error()","title":"S3Client Class — S3Client","text":"Get error associated S3 client.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"S3Client Class — S3Client","text":"","code":"S3Client$error()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"S3Client Class — S3Client","text":"error object, .","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"method-set-role-","dir":"Reference","previous_headings":"","what":"Method set_role()","title":"S3Client Class — S3Client","text":"Set AWS role S3 client.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"S3Client Class — S3Client","text":"","code":"S3Client$set_role(role)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3Client Class — S3Client","text":"role Character string specifying AWS role ARN.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"method-set-session-vars-","dir":"Reference","previous_headings":"","what":"Method set_session_vars()","title":"S3Client Class — S3Client","text":"Set session variables S3 client.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"S3Client Class — S3Client","text":"","code":"S3Client$set_session_vars(session_vars)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3Client Class — S3Client","text":"session_vars List session variables.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"method-set-client-params-","dir":"Reference","previous_headings":"","what":"Method set_client_params()","title":"S3Client Class — S3Client","text":"Set client parameters S3 client.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"S3Client Class — S3Client","text":"","code":"S3Client$set_client_params(client_params)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3Client Class — S3Client","text":"client_params List client parameters.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"S3Client Class — S3Client","text":"objects class cloneable method.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"S3Client Class — S3Client","text":"","code":"S3Client$clone(deep = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Client.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3Client Class — S3Client","text":"deep Whether make deep clone.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":null,"dir":"Reference","previous_headings":"","what":"S3Object Class — S3Object","title":"S3Object Class — S3Object","text":"Represents path object S3, optional local copy. S3Objects instantiated directly, returned many methods S3Client.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"S3Object Class — S3Object","text":"exists Logical indicating key corresponds object S3. url Character string S3 location object. prefix Character string prefix requested matches object. key Character string corresponding key given get call produced object. size Integer size object bytes (NULL key correspond object S3). has_info Logical indicating S3Object contains additional metadata. metadata List user-defined metadata (NULL metadata defined). content_type Character string content-type S3 object (NULL defined). last_modified Integer Unix timestamp last modified time. encryption Character string server-side-encryption type (NULL set).","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"S3Object Class — S3Object","text":"range_info list containing information partial downloads, NULL.","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"S3Object Class — S3Object","text":"S3Object$new() S3Object$print() S3Object$is_partially_downloaded() S3Object$clone()","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"S3Object Class — S3Object","text":"Initialize new S3Object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3Object Class — S3Object","text":"","code":"S3Object$new(py_obj)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3Object Class — S3Object","text":"py_obj Python S3Object instance.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"S3Object Class — S3Object","text":"Print method S3Object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"S3Object Class — S3Object","text":"","code":"S3Object$print(...)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3Object Class — S3Object","text":"... Additional arguments passed print (unused).","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-is-partially-downloaded-","dir":"Reference","previous_headings":"","what":"Method is_partially_downloaded()","title":"S3Object Class — S3Object","text":"Check object partially downloaded.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"S3Object Class — S3Object","text":"","code":"S3Object$is_partially_downloaded()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"S3Object Class — S3Object","text":"Logical indicating object partially downloaded.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"S3Object Class — S3Object","text":"objects class cloneable method.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"S3Object Class — S3Object","text":"","code":"S3Object$clone(deep = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3Object Class — S3Object","text":"deep Whether make deep clone.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/active_metaflow_profile_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Shiny app for displaying the current active Metaflow profile — active_metaflow_profile_app","title":"Create Shiny app for displaying the current active Metaflow profile — active_metaflow_profile_app","text":"Create Shiny app displaying current active Metaflow profile","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/active_metaflow_profile_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Shiny app for displaying the current active Metaflow profile — active_metaflow_profile_app","text":"","code":"active_metaflow_profile_app(profile_df, profile, profile_path)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/active_metaflow_profile_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Shiny app for displaying the current active Metaflow profile — active_metaflow_profile_app","text":"profile_df data frame containing profile information profile active profile profile_path path profile file","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/active_metaflow_profile_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Shiny app for displaying the current active Metaflow profile — active_metaflow_profile_app","text":"Shiny app object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/available_metaflow_profiles_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Shiny app to display all Metaflow profiles — available_metaflow_profiles_app","title":"Create Shiny app to display all Metaflow profiles — available_metaflow_profiles_app","text":"function creates Shiny app displays available Metaflow profiles allows user set active profile.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/available_metaflow_profiles_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Shiny app to display all Metaflow profiles — available_metaflow_profiles_app","text":"","code":"available_metaflow_profiles_app(profiles_df)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/available_metaflow_profiles_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Shiny app to display all Metaflow profiles — available_metaflow_profiles_app","text":"profiles_df profiles df 'Profile' 'path'.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/available_metaflow_profiles_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Shiny app to display all Metaflow profiles — available_metaflow_profiles_app","text":"Shiny app object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/available_metaflow_profiles_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Create server function for profiles app — available_metaflow_profiles_server","title":"Create server function for profiles app — available_metaflow_profiles_server","text":"Create server function profiles app","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/available_metaflow_profiles_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create server function for profiles app — available_metaflow_profiles_server","text":"","code":"available_metaflow_profiles_server(profiles_df)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/available_metaflow_profiles_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Create UI for profiles app — available_metaflow_profiles_ui","title":"Create UI for profiles app — available_metaflow_profiles_ui","text":"Create UI profiles app","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/available_metaflow_profiles_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create UI for profiles app — available_metaflow_profiles_ui","text":"","code":"available_metaflow_profiles_ui()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_action_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Action Table with Custom Rendering — create_action_table","title":"Create an Action Table with Custom Rendering — create_action_table","text":"Create Action Table Custom Rendering","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_action_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Action Table with Custom Rendering — create_action_table","text":"","code":"create_action_table(data, action_column_fn, cell_renderer_fn)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_s3_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new S3 object — create_s3_client","title":"Create a new S3 object — create_s3_client","text":"Create new S3 object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_s3_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new S3 object — create_s3_client","text":"","code":"create_s3_client(   tmproot = \".\",   bucket = NULL,   prefix = NULL,   run = NULL,   s3root = NULL )"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_s3_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new S3 object — create_s3_client","text":"tmproot Character string specifying temporary directory root. bucket Optional character string specifying S3 bucket. prefix Optional character string specifying S3 prefix. run Optional Metaflow Run object FlowSpec. s3root Optional character string specifying S3 root path.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_s3_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new S3 object — create_s3_client","text":"S3 object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_s3_client_with_role.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new S3 object with a specified AWS role — create_s3_client_with_role","title":"Create a new S3 object with a specified AWS role — create_s3_client_with_role","text":"Create new S3 object specified AWS role","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_s3_client_with_role.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new S3 object with a specified AWS role — create_s3_client_with_role","text":"","code":"create_s3_client_with_role(role, ...)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_s3_client_with_role.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new S3 object with a specified AWS role — create_s3_client_with_role","text":"role Character string specifying AWS role ARN. ... Additional arguments passed create_s3_client","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_s3_client_with_role.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new S3 object with a specified AWS role — create_s3_client_with_role","text":"S3 object specified role","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_s3_client_with_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new S3 object with specified session variables — create_s3_client_with_session","title":"Create a new S3 object with specified session variables — create_s3_client_with_session","text":"Create new S3 object specified session variables","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_s3_client_with_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new S3 object with specified session variables — create_s3_client_with_session","text":"","code":"create_s3_client_with_session(session_vars, ...)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_s3_client_with_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new S3 object with specified session variables — create_s3_client_with_session","text":"session_vars List session variables. ... Additional arguments passed create_s3_client","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_s3_client_with_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new S3 object with specified session variables — create_s3_client_with_session","text":"S3 object specified session variables","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_styled_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a standard Shiny page with custom styles — create_styled_page","title":"Create a standard Shiny page with custom styles — create_styled_page","text":"Create standard Shiny page custom styles","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/create_styled_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a standard Shiny page with custom styles — create_styled_page","text":"","code":"create_styled_page(..., additional_css = \"\")"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/generate_generic_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a generic table — generate_generic_table","title":"Generate a generic table — generate_generic_table","text":"Generate generic table","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/generate_generic_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a generic table — generate_generic_table","text":"","code":"generate_generic_table(data, action_column = NULL, cell_renderer = NULL)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_active_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Active Metaflow Profile — get_active_profile","title":"Get Active Metaflow Profile — get_active_profile","text":"Get Active Metaflow Profile","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_active_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Active Metaflow Profile — get_active_profile","text":"","code":"get_active_profile()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_all_metaflow_profiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all Metaflow profile configurations — get_all_metaflow_profiles","title":"Get all Metaflow profile configurations — get_all_metaflow_profiles","text":"Get Metaflow profile configurations","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_all_metaflow_profiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all Metaflow profile configurations — get_all_metaflow_profiles","text":"","code":"get_all_metaflow_profiles()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_custom_styles.html","id":null,"dir":"Reference","previous_headings":"","what":"Get custom CSS styles for Shiny apps — get_custom_styles","title":"Get custom CSS styles for Shiny apps — get_custom_styles","text":"Get custom CSS styles Shiny apps","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_custom_styles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get custom CSS styles for Shiny apps — get_custom_styles","text":"","code":"get_custom_styles(additional_css = \"\")"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_metaflow_home.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Metaflow home directory — get_metaflow_home","title":"Get Metaflow home directory — get_metaflow_home","text":"Get Metaflow home directory","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_metaflow_home.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Metaflow home directory — get_metaflow_home","text":"","code":"get_metaflow_home()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_profile_descriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Descriptions for Active Metaflow Profile Keys — get_profile_descriptions","title":"Get Descriptions for Active Metaflow Profile Keys — get_profile_descriptions","text":"Get Descriptions Active Metaflow Profile Keys","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_profile_descriptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Descriptions for Active Metaflow Profile Keys — get_profile_descriptions","text":"","code":"get_profile_descriptions(profile)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_s3_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Get S3 Client — get_s3_client","title":"Get S3 Client — get_s3_client","text":"Get S3 Client","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_s3_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get S3 Client — get_s3_client","text":"","code":"get_s3_client(   s3_role_arn = NULL,   s3_session_vars = NULL,   s3_client_params = NULL )"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_s3_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get S3 Client — get_s3_client","text":"s3_role_arn Optional character string specifying AWS role ARN. s3_session_vars Optional list session variables. s3_client_params Optional list client parameters.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_s3_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get S3 Client — get_s3_client","text":"list containing S3 client error occurred.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/handle_set_active_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle Set Active Profile — handle_set_active_profile","title":"Handle Set Active Profile — handle_set_active_profile","text":"Handle Set Active Profile","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/handle_set_active_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle Set Active Profile — handle_set_active_profile","text":"","code":"handle_set_active_profile(profile_name, profile_path)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/install_metaflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Install Metaflow and its dependencies — install_metaflow","title":"Install Metaflow and its dependencies — install_metaflow","text":"install_metaflow() installs Metaflow Python package direct dependencies PyPI using pip. function provides convenient way set Metaflow within R environment.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/install_metaflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install Metaflow and its dependencies — install_metaflow","text":"","code":"install_metaflow(   method = c(\"virtualenv\", \"conda\", \"auto\"),   conda = \"auto\",   version = \"default\",   envname = \"r-metaflow\",   extra_packages = NULL,   restart_session = TRUE,   python_version = NULL,   new_env = TRUE,   ... )"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/install_metaflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install Metaflow and its dependencies — install_metaflow","text":"method Installation method. Can \"auto\", \"virtualenv\", \"conda\". affects type environment created, Metaflow always installed via pip. conda Path conda executable (applicable method = \"conda\") version Metaflow version install. Use \"default\" latest version, specify version like \"2.12.23\" \"2.11.6\". envname Name virtual/conda environment install packages . Default \"r-metaflow\". extra_packages Additional Python packages install along Metaflow restart_session Restart R session installing (RStudio) python_version Python version use. Must >= 3.8. new_env Whether create new environment use existing one ... Additional arguments passed reticulate installation functions","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/install_metaflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install Metaflow and its dependencies — install_metaflow","text":"function returns NULL invisibly. primary side effect installation Metaflow dependencies specified environment.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/install_metaflow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install Metaflow and its dependencies — install_metaflow","text":"function installs Metaflow PyPI using pip, regardless whether virtualenv Conda environment used. Conda environment specified, function create Conda environment still use pip install Metaflow within environment. function performs several checks steps: Verifies system Windows (supported) Checks sets appropriate Python version Prepares installation environment (new existing) Installs Metaflow additional specified packages","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/reference/install_metaflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install Metaflow and its dependencies — install_metaflow","text":"","code":"if (FALSE) { # \\dontrun{ install_metaflow() install_metaflow(method = \"conda\", version = \"2.3.0\") } # }"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/is_interactive_viewer_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Interactive Viewer is Available — is_interactive_viewer_available","title":"Check if Interactive Viewer is Available — is_interactive_viewer_available","text":"Check Interactive Viewer Available","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/is_interactive_viewer_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Interactive Viewer is Available — is_interactive_viewer_available","text":"","code":"is_interactive_viewer_available()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/is_valid_metaflow_home.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a provided directory exists and contains valid config files — is_valid_metaflow_home","title":"Check if a provided directory exists and contains valid config files — is_valid_metaflow_home","text":"Check provided directory exists contains valid config files","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/is_valid_metaflow_home.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a provided directory exists and contains valid config files — is_valid_metaflow_home","text":"","code":"is_valid_metaflow_home(dir_path)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/is_valid_metaflow_home_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a provided directory exists and contains valid config files — is_valid_metaflow_home_dir","title":"Check if a provided directory exists and contains valid config files — is_valid_metaflow_home_dir","text":"Check provided directory exists contains valid config files","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/is_valid_metaflow_home_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a provided directory exists and contains valid config files — is_valid_metaflow_home_dir","text":"","code":"is_valid_metaflow_home_dir(dir_path)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/list_metaflow_home_profiles.html","id":null,"dir":"Reference","previous_headings":"","what":"List all profiles in Metaflow home directory — list_metaflow_home_profiles","title":"List all profiles in Metaflow home directory — list_metaflow_home_profiles","text":"List profiles Metaflow home directory","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/list_metaflow_home_profiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all profiles in Metaflow home directory — list_metaflow_home_profiles","text":"","code":"list_metaflow_home_profiles()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/list_profiles.html","id":null,"dir":"Reference","previous_headings":"","what":"List all profiles in Metaflow home directory — list_profiles","title":"List all profiles in Metaflow home directory — list_profiles","text":"List profiles Metaflow home directory","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/list_profiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all profiles in Metaflow home directory — list_profiles","text":"","code":"list_profiles()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/load_default_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the default Metaflow profile — load_default_profile","title":"Set the default Metaflow profile — load_default_profile","text":"Set default Metaflow profile","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/load_default_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the default Metaflow profile — load_default_profile","text":"","code":"load_default_profile()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/make_profile_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate profile name from a file path — make_profile_name","title":"Generate profile name from a file path — make_profile_name","text":"Generate profile name file path","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/make_profile_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate profile name from a file path — make_profile_name","text":"","code":"make_profile_name(path)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Metaflow for R — metaflow","title":"Metaflow for R — metaflow","text":"Metaflow open-source framework data science projects. designed handle entire lifecycle data science workflows, prototyping production deployment. Metaflow allows write manage data processing pipelines using simple, intuitive API.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metaflow for R — metaflow","text":"Metaflow API primarily implemented Python, bindings R. package provides access complete Metaflow functionality within R. Key features Metaflow include: Seamless scaling prototype production Built-versioning data code Easy integration cloud computing resources Support parallel distributed computing","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow.html","id":"documentation","dir":"Reference","previous_headings":"","what":"Documentation","title":"Metaflow for R — metaflow","text":"additional documentation Metaflow package, see https://docs.metaflow.org/v/r/","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow.html","id":"enterprise-support","dir":"Reference","previous_headings":"","what":"Enterprise Support","title":"Metaflow for R — metaflow","text":"information managed Metaflow enterprise offerings, visit Outerbounds","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Metaflow for R — metaflow","text":"Bryan Galvin (bcgalvin@gmail.com)","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow_profile_viewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Metaflow Profile Information — metaflow_profile_viewer","title":"Display Metaflow Profile Information — metaflow_profile_viewer","text":"function displays Metaflow profile information either via Shiny app RStudio Viewer provides warning interactive viewer available.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow_profile_viewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Metaflow Profile Information — metaflow_profile_viewer","text":"","code":"metaflow_profile_viewer(data_df, shiny_app_func, title, ...)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the installed Metaflow version — metaflow_version","title":"Get the installed Metaflow version — metaflow_version","text":"metaflow_version() returns version installed Metaflow Python package.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the installed Metaflow version — metaflow_version","text":"","code":"metaflow_version()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the installed Metaflow version — metaflow_version","text":"character string representing Metaflow version.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the installed Metaflow version — metaflow_version","text":"","code":"metaflow_version() #> Error in metaflow_version(): Metaflow is not available. Please install Metaflow using install_metaflow()."},{"path":"https://bcgalvin.github.io/metaflow-r/reference/profile_detail_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Profile Detail Module Server — profile_detail_server","title":"Profile Detail Module Server — profile_detail_server","text":"Profile Detail Module Server","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/profile_detail_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Profile Detail Module Server — profile_detail_server","text":"","code":"profile_detail_server(id, profile, profile_path, profile_df)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/profile_detail_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Profile Detail Module UI — profile_detail_ui","title":"Profile Detail Module UI — profile_detail_ui","text":"Profile Detail Module UI","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/profile_detail_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Profile Detail Module UI — profile_detail_ui","text":"","code":"profile_detail_ui(id)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/read_profile_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Metaflow profile configuration file — read_profile_json","title":"Read a Metaflow profile configuration file — read_profile_json","text":"Read Metaflow profile configuration file","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/read_profile_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Metaflow profile configuration file — read_profile_json","text":"","code":"read_profile_json(path)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/read_profile_json_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Metaflow profile configuration file — read_profile_json_file","title":"Read a Metaflow profile configuration file — read_profile_json_file","text":"Read Metaflow profile configuration file","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/read_profile_json_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Metaflow profile configuration file — read_profile_json_file","text":"","code":"read_profile_json_file(path)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/setup_profile_observers.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup Profile Observers — setup_profile_observers","title":"Setup Profile Observers — setup_profile_observers","text":"Setup Profile Observers","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/setup_profile_observers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup Profile Observers — setup_profile_observers","text":"","code":"setup_profile_observers(profiles_df, input, output, session)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/show_profile_modal.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Profile Detail Modal — show_profile_modal","title":"Show Profile Detail Modal — show_profile_modal","text":"Show Profile Detail Modal","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/show_profile_modal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Profile Detail Modal — show_profile_modal","text":"","code":"show_profile_modal(profile_id, profile, profile_path, profile_df)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates the Metaflow profile by name or path — update_profile","title":"Updates the Metaflow profile by name or path — update_profile","text":"Updates Metaflow profile name path","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates the Metaflow profile by name or path — update_profile","text":"","code":"update_profile(name = NULL, path = NULL)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates the Metaflow profile by name or path — update_profile","text":"name Optional. string representing profile name. path Optional. string representing path profile JSON file.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Updates the Metaflow profile by name or path — update_profile","text":"Invisibly returns updated profile","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile_globals.html","id":null,"dir":"Reference","previous_headings":"","what":"Overwrites the global profile — update_profile_globals","title":"Overwrites the global profile — update_profile_globals","text":"Overwrites global profile","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile_globals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrites the global profile — update_profile_globals","text":"","code":"update_profile_globals(path)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates the Metaflow profile by name — update_profile_name","title":"Updates the Metaflow profile by name — update_profile_name","text":"Updates Metaflow profile name","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates the Metaflow profile by name — update_profile_name","text":"","code":"update_profile_name(name)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates the Metaflow profile by path — update_profile_path","title":"Updates the Metaflow profile by path — update_profile_path","text":"Updates Metaflow profile path","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates the Metaflow profile by path — update_profile_path","text":"","code":"update_profile_path(path)"},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/news/index.html","id":"new-features-0-0-1","dir":"Changelog","previous_headings":"","what":"New features","title":"metaflow 0.0.1 (Development version)","text":"Added install_metaflow() function easy installation Metaflow.","code":""}]
