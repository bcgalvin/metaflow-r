[{"path":"https://bcgalvin.github.io/metaflow-r/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 metaflow authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Configuring Metaflow","text":"vignette guides process configuring Metaflow using R package. Metaflow uses configuration profiles manage different settings various environments use cases. document explain list, view, update profiles, well provide context Metaflow configuration.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"metaflow-configuration-overview","dir":"Articles","previous_headings":"","what":"Metaflow Configuration Overview","title":"Configuring Metaflow","text":"Metaflow configuration managed JSON files, typically located ~/.metaflowconfig/ directory. configuration files allow customize various aspects Metaflow’s behavior, including: Execution environment (local, AWS, Kubernetes) Data store settings Metadata service configuration Monitoring logging preferences configuration hierarchical, values defined specific level overriding general settings.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"listing-profiles","dir":"Articles","previous_headings":"","what":"Listing Profiles","title":"Configuring Metaflow","text":"view available Metaflow profiles, use list_profiles() function: function returns tibble two columns: - profile_name: name profile - path: full path profile’s JSON configuration file","code":"library(metaflow) list_profiles()"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"viewing-the-active-profile","dir":"Articles","previous_headings":"","what":"Viewing the Active Profile","title":"Configuring Metaflow","text":"see profile currently active contents, use get_active_profile() function: function returns list three elements: - name: name active profile - path: full path active profile’s JSON configuration file - values: contents profile list profile active, warning displayed, function return NULL.","code":"get_active_profile()"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"updating-the-active-profile","dir":"Articles","previous_headings":"","what":"Updating the Active Profile","title":"Configuring Metaflow","text":"change active profile, use update_profile() function. can update name path: function update active profile return contents new profile invisibly.","code":"# Update by name update_profile(name = \"aws\")  # Update by path update_profile(path = \"~/.metaflowconfig/config_aws.json\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"working-with-metaflow-home-directory","dir":"Articles","previous_headings":"","what":"Working with Metaflow Home Directory","title":"Configuring Metaflow","text":"Metaflow uses home directory store configuration files. default, ~/.metaflowconfig/, can overridden using METAFLOW_HOME environment variable. get current Metaflow home directory: function return path Metaflow home directory, NULL valid directory found.","code":"metaflow:::get_metaflow_home()"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/configure-metaflow.html","id":"configuration-hierarchy","dir":"Articles","previous_headings":"","what":"Configuration Hierarchy","title":"Configuring Metaflow","text":"Metaflow configuration follows hierarchical structure: Built-defaults ~/.metaflowconfig/config.json ~/.metaflowconfig/config_<PROFILE>.json Environment variables Command line arguments level overrides previous ones, allowing flexible configuration management. functions provide comprehensive way manage Metaflow configurations R. using tools, can easily switch different Metaflow setups various environments projects. detailed information function, can use R help system: Remember proper configuration crucial Metaflow work correctly different environments. Always ensure active profile matches current needs environment setup.","code":"?list_profiles ?get_active_profile ?update_profile"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Installing Metaflow","text":"vignette guides process installing Metaflow using R package. Metaflow Python library, R package provides convenient way install use Metaflow within R environment.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Installing Metaflow","text":"installing Metaflow, ensure : R (version 3.6 later) Python (version 3.7 later)","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"basic-installation","dir":"Articles","previous_headings":"","what":"Basic Installation","title":"Installing Metaflow","text":"install latest version Metaflow, use install_metaflow() function: install Metaflow virtual environment named “r-metaflow”.","code":"library(metaflow) install_metaflow()"},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"specifying-a-version","dir":"Articles","previous_headings":"Customizing the Installation","what":"Specifying a Version","title":"Installing Metaflow","text":"can install specific version Metaflow:","code":"install_metaflow(version = \"2.7.3\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"using-conda","dir":"Articles","previous_headings":"Customizing the Installation","what":"Using Conda","title":"Installing Metaflow","text":"use Conda installation: can specify Conda executable path needed:","code":"install_metaflow(method = \"conda\") install_metaflow(method = \"conda\", conda = \"/path/to/conda\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"using-pip","dir":"Articles","previous_headings":"Customizing the Installation","what":"Using pip","title":"Installing Metaflow","text":"default, install_metaflow() uses pip. can make explicit:","code":"install_metaflow(method = \"virtualenv\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"custom-environment-name","dir":"Articles","previous_headings":"Customizing the Installation","what":"Custom Environment Name","title":"Installing Metaflow","text":"Specify custom environment name:","code":"install_metaflow(envname = \"my-metaflow-env\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"additional-packages","dir":"Articles","previous_headings":"Customizing the Installation","what":"Additional Packages","title":"Installing Metaflow","text":"Install additional Python packages along Metaflow:","code":"install_metaflow(extra_packages = c(\"pandas\", \"numpy\"))"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"specifying-python-version","dir":"Articles","previous_headings":"Customizing the Installation","what":"Specifying Python Version","title":"Installing Metaflow","text":"Choose specific Python version:","code":"install_metaflow(python_version = \"3.8\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"using-existing-python-environments","dir":"Articles","previous_headings":"","what":"Using Existing Python Environments","title":"Installing Metaflow","text":"Instead creating new environment, can use existing Python installation setting environment variables: Use METAFLOW_PYTHON: Set path Python executable use specific Python installation Metaflow. setting either variables, can use Metaflow without running install_metaflow().","code":"Sys.setenv(METAFLOW_PYTHON = \"/path/to/python\")"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"verifying-the-installation","dir":"Articles","previous_headings":"","what":"Verifying the Installation","title":"Installing Metaflow","text":"installation, verify Metaflow correctly installed: print installed version Metaflow.","code":"library(metaflow) metaflow::metaflow_version()"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"Installing Metaflow","text":"encounter issues installation: Ensure required Python version installed. Check write permissions installation directory. using Conda, make sure Conda properly set system. detailed information, refer install_metaflow() function documentation:","code":"?install_metaflow"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/install-metaflow.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Installing Metaflow","text":"now Metaflow installed ready use R environment. information using Metaflow, refer vignettes package official Metaflow documentation.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3---accessing-data-in-s3-quickly","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"S3 R6 class wrapper standard AWS Python library, boto, accessed reticulate. contains enhancements relevant data-intensive applications: Supports accessing large amounts data quickly parallel operations (functions _many suffix). can download 20Gbps large EC2 instance. Improved error handling. Supports versioned data S3$new(run=self) S3$new(run=Run). User-friendly API minimal boilerplate. Convenient API advanced features range requests (downloading partial files) object headers.","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > The S3 R6 Class","what":"S3","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Metaflow S3 client. object manages connection S3 temporary directory used download objects. Note cases data fits memory, local disk IO needed operations cached operating system, makes operations fast long enough memory available. easiest way use object follows: can customize location temporary directory tmproot. defaults current working directory. make easier deal object locations, client can initialized S3 path prefix. three ways handle locations: Use metaflow.Run object self, e.g. S3$new(run=self) initializes prefix global DATATOOLS_S3ROOT path, combined current run ID. mode makes easy version data based run ID consistently. can use bucket prefix override parts DATATOOLS_S3ROOT. Specify S3 prefix explicitly s3root, e.g. S3$new(s3root='s3://mybucket//path'). Specify nothing, .e. S3$new(), case operations require full S3 url prefixed s3://.","code":"library(metaflow) library(purrr) s3 <- S3$new() data <- s3$get_many(urls) %>% map(~ .x$blob) print(data)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"parameters","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > The S3 R6 Class > S3","what":"Parameters","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"tmproot (character, default: ‘.’): store temporary directory. bucket (character, optional): Override bucket DATATOOLS_S3ROOT run specified. prefix (character, optional): Override path DATATOOLS_S3ROOT run specified. run (FlowSpec Run, optional): Derive path prefix current past run ID, e.g. S3$new(run=self). s3root (character, optional): run specified, use S3 prefix.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3close","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > The S3 R6 Class > S3","what":"S3$close","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Delete temporary files downloaded context.","code":"s3$close()"},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3get","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Downloading data","what":"S3$get","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Get single object S3.","code":"S3$get(key = NULL, return_missing = FALSE, return_info = TRUE)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"parameters-1","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"key (character S3GetObject, optional, default NULL): Object download. can S3 url, path suffix, S3GetObject defines range data download. NULL, provided, gets S3 root. return_missing (logical, default FALSE): set TRUE, raise exception missing key return s3_object $exists() == FALSE. return_info (logical, default TRUE): set TRUE, fetch content-type user metadata associated object extra cost, included symmetry get_many","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"s3_object: s3_object corresponding object requested.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3get_many","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Downloading data","what":"S3$get_many","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Get many objects S3 parallel.","code":"S3$get_many(keys, return_missing = FALSE, return_info = TRUE)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"parameters-2","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"keys (list): Objects download. object can S3 url, path suffix, S3GetObject defines range data download. return_missing (logical, default FALSE): set TRUE, raise exception missing key return s3_object $exists() == FALSE. return_info (logical, default TRUE): set TRUE, fetch content-type user metadata associated object extra cost, included symmetry get_many.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-1","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"list: List s3_object instances corresponding objects requested.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3get_recursive","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Downloading data","what":"S3$get_recursive","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Get many objects S3 recursively parallel.","code":"S3$get_recursive(keys, return_info = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"parameters-3","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"keys (list): Prefixes download recursively. prefix can S3 url path suffix define root prefix objects downloaded. return_info (logical, default FALSE): set TRUE, fetch content-type user metadata associated object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-2","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"list: List s3_object instances stored given prefixes.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3get_all","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Downloading data","what":"S3$get_all","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Get objects prefix set S3 constructor. method requires S3 object initialized either run s3root.","code":"S3$get_all(return_info = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"parameters-4","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"return_info (logical, default FALSE): set TRUE, fetch content-type user metadata associated object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-3","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"list: List s3_object instances stored main prefix.","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3list_paths","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Listing objects","what":"S3$list_paths","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"List next level paths S3. multiple keys specified, listings done parallel. returned s3_object instances $exists() == FALSE path refers prefix, existing S3 object. instance, directory hierarchy : S3$list_paths(c('', 'f')) call returns:","code":"S3$list_paths(keys = NULL) a/0.txt a/b/1.txt a/c/2.txt a/d/e/3.txt f/4.txt a/0.txt (exists == TRUE) a/b/ (exists == FALSE) a/c/ (exists == FALSE) a/d/ (exists == FALSE) f/4.txt (exists == TRUE)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"parameters-5","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"keys (list, optional, default NULL): List paths.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-4","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"list: List s3_object instances given paths, including prefixes (directories) correspond leaf objects.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3list_recursive","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Listing objects","what":"S3$list_recursive","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"List objects recursively given prefixes. multiple keys specified, listings done parallel. objects returned $exists() == TRUE call always returns leaf objects. instance, directory hierarchy : S3$list_recursive(c('', 'f')) call returns:","code":"S3$list_recursive(keys = NULL) a/0.txt a/b/1.txt a/c/2.txt a/d/e/3.txt f/4.txt a/0.txt (exists == TRUE) a/b/1.txt (exists == TRUE) a/c/2.txt (exists == TRUE) a/d/e/3.txt (exists == TRUE) f/4.txt (exists == TRUE)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"parameters-6","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"keys (list, optional, default NULL): List paths.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-5","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"list: List s3_object instances given paths.","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3put","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Uploading data","what":"S3$put","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Upload single object S3.","code":"S3$put(key, obj, overwrite = TRUE, content_type = NULL, metadata = NULL)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"parameters-7","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"key (character S3PutObject): Object path. can S3 url path suffix. obj (R object): object store S3. overwrite (logical, default TRUE): Overwrite object exists. set FALSE, operation succeeds without uploading anything key already exists. content_type (character, optional, default NULL): Optional MIME type object. metadata (list, optional, default NULL): list additional headers stored metadata object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-6","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"character: URL object stored.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3put_many","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Uploading data","what":"S3$put_many","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Upload many objects S3. object uploaded can specified two ways: list(key, obj) key string specifying path obj R object. S3PutObject contains additional metadata stored object.","code":"S3$put_many(key_objs, overwrite = TRUE)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"parameters-8","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"key_objs (list): List key-object pairs S3PutObjects upload. overwrite (logical, default TRUE): Overwrite object exists. set FALSE, operation succeeds without uploading anything key already exists.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-7","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"list: List list(key, url) pairs corresponding objects uploaded.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3put_files","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Uploading data","what":"S3$put_files","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Upload many local files S3. file uploaded can specified two ways: list(key, path) key string specifying S3 path path path local file. S3PutObject contains additional metadata stored file.","code":"S3$put_files(key_paths, overwrite = TRUE)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"parameters-9","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"key_paths (list): List files upload. overwrite (logical, default TRUE): Overwrite object exists. set FALSE, operation succeeds without uploading anything key already exists.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-8","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"list: List list(key, url) pairs corresponding files uploaded.","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3info","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Querying metadata","what":"S3$info","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Get metadata single object S3. call makes single HEAD request S3 can much faster downloading data get.","code":"S3$info(key = NULL, return_missing = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"parameters-10","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"key (character, optional, default NULL): Object query. can S3 url path suffix. return_missing (logical, default FALSE): set TRUE, raise exception missing key return s3_object $exists() == FALSE.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-9","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"s3_object: s3_object corresponding object requested. object $downloaded() == FALSE.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3info_many","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Querying metadata","what":"S3$info_many","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Get metadata many objects S3 parallel. call makes single HEAD request S3 can much faster downloading data get.","code":"S3$info_many(keys, return_missing = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"parameters-11","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"keys (list): Objects query. key can S3 url path suffix. return_missing (logical, default FALSE): set TRUE, raise exception missing key return s3_object $exists() == FALSE.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-10","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"list: list s3_object instances corresponding paths requested. objects $downloaded() == FALSE.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"handling-results-with-s3_object","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly","what":"Handling results with s3_object","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"operations return s3_object instances encapsulate information S3 paths objects. Note data kept objects stored temporary directory accessible properties object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_object","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object","what":"s3_object","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"object represents path object S3, optional local copy. s3_object instances instantiated directly, returned many methods S3 R6 class.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objectexists","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$exists()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"key correspond object S3?","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-11","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"logical: TRUE object points existing object (file) S3.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objectdownloaded","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$downloaded()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"object downloaded? TRUE, contents can accessed path(), blob(), text() methods.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-12","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"logical: TRUE contents object downloaded.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objecturl","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$url()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"S3 location object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-13","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"character: S3 location object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objectprefix","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$prefix()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Prefix requested matches object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-14","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"character: Requested prefix","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objectkey","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$key()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Key corresponds key given get call produced object. may full S3 URL suffix based requested.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-15","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"character: Key requested.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objectpath","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$path()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Path local temporary file corresponding object downloaded. file gets deleted automatically S3 scope exits. Returns NULL s3_object downloaded.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-16","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"character: Local path, object downloaded.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objectblob","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$blob()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Contents object byte string NULL object hasn’t downloaded.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-17","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"raw: Contents object bytes.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objecttext","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$text()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Contents object string NULL object hasn’t downloaded. object assumed contain UTF-8 encoded data.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-18","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"character: Contents object text.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objectsize","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$size()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Size object bytes. Returns NULL key correspond object S3.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-19","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"integer: Size object bytes, object exists.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objecthas_info","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$has_info()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Returns true s3_object contains content-type MIME header user-defined metadata. FALSE, means content_type(), metadata(), range_info() last_modified() return NULL.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-20","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"logical: TRUE additional metadata available.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objectmetadata","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$metadata()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Returns list user-defined metadata, NULL metadata defined.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-21","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"list: User-defined metadata.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objectcontent_type","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$content_type()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Returns content-type S3 object NULL defined.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-22","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"character: Content type NULL content type undefined.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objectrange_info","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$range_info()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"object corresponds partially downloaded object, returns information downloaded. returned object following fields: total_size: Size object S3. request_offset: starting offset. request_length: number bytes downloaded.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"s3_objectlast_modified","dir":"Articles","previous_headings":"S3 - Accessing data in S3 quickly > Handling results with s3_object > s3_object","what":"s3_object$last_modified()","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"Returns last modified unix timestamp object.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/articles/s3-client.html","id":"returns-23","dir":"Articles","previous_headings":"","what":"S3 - Accessing data in S3 quickly (R Integration)","title":"S3 - Accessing data in S3 quickly (R Integration)","text":"POSIXct: Unix timestamp corresponding last modified time.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bryan Galvin. Author, maintainer.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Galvin B (2024). metaflow: R Interface 'Metaflow'. R package version 0.0.1, https://docs.metaflow.org/v/r/,https://github.com/Netflix/metaflow,https://bcgalvin.github.io/metaflow-r/, https://metaflow.org/.","code":"@Manual{,   title = {metaflow: R Interface to 'Metaflow'},   author = {Bryan Galvin},   year = {2024},   note = {R package version 0.0.1, https://docs.metaflow.org/v/r/,https://github.com/Netflix/metaflow,https://bcgalvin.github.io/metaflow-r/},   url = {https://metaflow.org/}, }"},{"path":"https://bcgalvin.github.io/metaflow-r/index.html","id":"id_-metaflow","dir":"","previous_headings":"","what":"R Interface to Metaflow","title":"R Interface to Metaflow","text":"Interface ‘Metaflow’ https://metaflow.org/, framework constructing managing data science workflows. ‘Metaflow’ implements unified API entire data science project lifecycle, initial prototyping way production deployment. Key features encompass version control, scalability, seamless integration popular cloud orchestration tools. R package enables data scientists harness ‘Metaflow’s’ capabilities within preferred R environment, facilitating efficient development deployment data science projects.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Interface to Metaflow","text":"can install development version metaflow GitHub :","code":"devtools::install_github(\"bcgalvin/metaflow-r\")"},{"path":"https://bcgalvin.github.io/metaflow-r/index.html","id":"implemented-features","dir":"","previous_headings":"","what":"Implemented Features","title":"R Interface to Metaflow","text":"metaflow package offers functionality managing Metaflow named profiles provides integration Metaflow S3 client. ’s overview main features:","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/index.html","id":"profile-management","dir":"","previous_headings":"Implemented Features","what":"Profile Management","title":"R Interface to Metaflow","text":"package provides functions manage Metaflow profiles, allowing handle different configurations workflows. respects METAFLOW_HOME METAFLOW_PROFILE environment variables.","code":"# List all profiles in Metaflow home directory list_profiles()  # Get Active Metaflow Profile get_active_profile()  # Update the Metaflow profile by name or path update_profile(name = \"my_profile\") # or update_profile(path = \"/path/to/profile.json\")"},{"path":"https://bcgalvin.github.io/metaflow-r/index.html","id":"s3-client","dir":"","previous_headings":"Implemented Features","what":"S3 Client","title":"R Interface to Metaflow","text":"interface metaflow S3 client implemented R6 classes user-friendly interface built top soon.","code":"# Create a new S3Client s3_client <- create_s3_client(tmproot = \".\", bucket = \"my-bucket\", prefix = \"my-prefix\")  # Connect to S3 s3_client$connect()  # List objects in the root of the S3 path root_objects <- s3_client$list_paths()  # Get a single object s3_object <- s3_client$get(\"my_key\")  # Put a single object url <- s3_client$put(\"my_key\", \"My object content\")  # Get multiple objects s3_objects <- s3_client$get_many(c(\"key1\", \"key2\", \"key3\"))  # Put multiple objects results <- s3_client$put_many(list(   list(key = \"key1\", value = \"Content 1\"),   list(key = \"key2\", value = \"Content 2\") ))  # Get objects recursively recursive_objects <- s3_client$get_recursive(c(\"prefix1\", \"prefix2\"))  # Put multiple files results <- s3_client$put_files(list(   list(key = \"key1\", path = \"path/to/file1\"),   list(key = \"key2\", path = \"path/to/file2\") ))"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Wrapper for Metaflow S3 Client — S3","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"R6 Class Wrapper Metaflow S3 Client R6 Class Wrapper Metaflow S3 Client","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"class provides R interface Metaflow S3 client functionality.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"py_s3 Python S3 object","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"S3$new() S3$get() S3$put() S3$get_many() S3$put_many() S3$list_paths() S3$list_recursive() S3$info() S3$info_many() S3$get_all() S3$close() S3$clone()","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"Create new S3Client object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"","code":"S3$new(...)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"... Additional arguments passed Python S3 constructor","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"Get single object S3","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"","code":"S3$get(key, return_missing = FALSE, return_info = TRUE, ...)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"key Object key return_missing TRUE, return missing object instead raising exception return_info TRUE, fetch content-type user metadata ... Additional arguments passed Python get method","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"S3Object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-put-","dir":"Reference","previous_headings":"","what":"Method put()","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"Put single object S3","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"","code":"S3$put(key, obj, overwrite = TRUE, content_type = NULL, metadata = NULL, ...)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"key Object key obj Object store overwrite TRUE, overwrite existing object content_type MIME type object metadata list additional headers stored metadata ... Additional arguments passed Python put method","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"URL stored object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-get-many-","dir":"Reference","previous_headings":"","what":"Method get_many()","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"Get many objects S3 parallel","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"","code":"S3$get_many(keys, return_missing = FALSE, return_info = TRUE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"keys List object keys return_missing TRUE, return missing objects instead raising exceptions return_info TRUE, fetch content-type user metadata","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"List S3Object instances","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-put-many-","dir":"Reference","previous_headings":"","what":"Method put_many()","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"Put many objects S3","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"","code":"S3$put_many(key_objs, overwrite = TRUE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"key_objs List key-object pairs S3PutObjects overwrite TRUE, overwrite existing objects","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"List (key, url) pairs uploaded objects","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-list-paths-","dir":"Reference","previous_headings":"","what":"Method list_paths()","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"List next level paths S3","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"","code":"S3$list_paths(keys = NULL)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"keys List paths list","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"List S3Object instances","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-list-recursive-","dir":"Reference","previous_headings":"","what":"Method list_recursive()","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"List objects recursively given prefixes","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"","code":"S3$list_recursive(keys = NULL)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"keys List prefixes list","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"List S3Object instances","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-info-","dir":"Reference","previous_headings":"","what":"Method info()","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"Get metadata single object S3","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"","code":"S3$info(key = NULL, return_missing = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"key Object key return_missing TRUE, return missing object instead raising exception","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"S3Object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-info-many-","dir":"Reference","previous_headings":"","what":"Method info_many()","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"Get metadata many objects S3 parallel","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"","code":"S3$info_many(keys, return_missing = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"keys List object keys return_missing TRUE, return missing objects instead raising exceptions","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"List S3Object instances","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-get-all-","dir":"Reference","previous_headings":"","what":"Method get_all()","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"Get objects prefix set S3 constructor","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"","code":"S3$get_all(return_info = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"return_info TRUE, fetch content-type user metadata","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"List S3Object instances","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-close-","dir":"Reference","previous_headings":"","what":"Method close()","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"Close S3 client delete temporary files","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"","code":"S3$close()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"objects class cloneable method.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"","code":"S3$clone(deep = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3 Client — S3","text":"deep Whether make deep clone.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class Wrapper for Metaflow S3Object — S3Object","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"R6 Class Wrapper Metaflow S3Object R6 Class Wrapper Metaflow S3Object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"class represents S3 object returned s3_client.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"read-property. set directly.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"py_obj Python S3Object","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"S3Object$convert_bool() S3Object$new() S3Object$url() S3Object$text() S3Object$size() S3Object$exists() S3Object$downloaded() S3Object$path() S3Object$blob() S3Object$content_type() S3Object$metadata() S3Object$last_modified() S3Object$prefix() S3Object$key() S3Object$has_info() S3Object$encryption() S3Object$range_info() S3Object$clone()","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-convert-bool-","dir":"Reference","previous_headings":"","what":"Method convert_bool()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Convert value boolean, handling R logical Python boolean objects","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$convert_bool(value)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"value value convert","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"logical value","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"s3obj$convert_bool(TRUE)  # Returns TRUE s3obj$convert_bool(get_py_false())  # Returns FALSE s3obj$convert_bool(NULL)  # Returns FALSE \\dontrun{ s3obj$convert_bool(\"not a boolean\")  # Throws an error }"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Create new S3Object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$new(py_obj)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"py_obj Python S3Object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-url-","dir":"Reference","previous_headings":"","what":"Method url()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Get URL S3 object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$url()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"URL string","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-text-","dir":"Reference","previous_headings":"","what":"Method text()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Get content S3 object text","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$text()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Content string","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-size-","dir":"Reference","previous_headings":"","what":"Method size()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Get size S3 object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$size()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Size bytes","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-exists-","dir":"Reference","previous_headings":"","what":"Method exists()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Check object exists S3","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$exists()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Boolean indicating existence","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-downloaded-","dir":"Reference","previous_headings":"","what":"Method downloaded()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Check object downloaded","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$downloaded()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Boolean indicating downloaded","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-path-","dir":"Reference","previous_headings":"","what":"Method path()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Get local path downloaded object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$path()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Local path string","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-blob-","dir":"Reference","previous_headings":"","what":"Method blob()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Get content S3 object byte string","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$blob()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Content raw bytes","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-content-type-","dir":"Reference","previous_headings":"","what":"Method content_type()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Get content type S3 object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$content_type()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Content type string","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-metadata-","dir":"Reference","previous_headings":"","what":"Method metadata()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Get metadata S3 object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$metadata()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Metadata list","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-last-modified-","dir":"Reference","previous_headings":"","what":"Method last_modified()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Get last modified timestamp S3 object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$last_modified()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Last modified timestamp POSIXct object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-prefix-","dir":"Reference","previous_headings":"","what":"Method prefix()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Get prefix requested matches object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$prefix()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Prefix string","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-key-","dir":"Reference","previous_headings":"","what":"Method key()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Get key corresponding get call produced object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$key()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Key string","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-has-info-","dir":"Reference","previous_headings":"","what":"Method has_info()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Check S3Object contains additional metadata","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$has_info()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Boolean indicating additional metadata available","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-encryption-","dir":"Reference","previous_headings":"","what":"Method encryption()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Get encryption type S3 object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$encryption()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Encryption type string NULL defined","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-range-info-","dir":"Reference","previous_headings":"","what":"Method range_info()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"Get information partially downloaded object","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$range_info()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"list total_size, request_offset, request_length, NULL applicable","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"objects class cloneable method.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"S3Object$clone(deep = FALSE)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"deep Whether make deep clone.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/S3Object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 Class Wrapper for Metaflow S3Object — S3Object","text":"","code":"## ------------------------------------------------ ## Method `S3Object$convert_bool` ## ------------------------------------------------  s3obj$convert_bool(TRUE)  # Returns TRUE #> Error: object 's3obj' not found s3obj$convert_bool(get_py_false())  # Returns FALSE #> Error: object 's3obj' not found s3obj$convert_bool(NULL)  # Returns FALSE #> Error: object 's3obj' not found if (FALSE) { # \\dontrun{ s3obj$convert_bool(\"not a boolean\")  # Throws an error } # }"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_active_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Active Metaflow Profile — get_active_profile","title":"Get Active Metaflow Profile — get_active_profile","text":"Get Active Metaflow Profile","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_active_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Active Metaflow Profile — get_active_profile","text":"","code":"get_active_profile()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_metaflow_home.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Metaflow home directory — get_metaflow_home","title":"Get Metaflow home directory — get_metaflow_home","text":"Get Metaflow home directory","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/get_metaflow_home.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Metaflow home directory — get_metaflow_home","text":"","code":"get_metaflow_home()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/install_metaflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Install Metaflow and its dependencies — install_metaflow","title":"Install Metaflow and its dependencies — install_metaflow","text":"install_metaflow() installs Metaflow Python package direct dependencies PyPI using pip. function provides convenient way set Metaflow within R environment.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/install_metaflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install Metaflow and its dependencies — install_metaflow","text":"","code":"install_metaflow(   method = c(\"virtualenv\", \"conda\", \"auto\"),   conda = \"auto\",   version = \"default\",   envname = \"r-metaflow\",   extra_packages = NULL,   restart_session = TRUE,   python_version = NULL,   new_env = TRUE,   ... )"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/install_metaflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install Metaflow and its dependencies — install_metaflow","text":"method Installation method. Can \"auto\", \"virtualenv\", \"conda\". affects type environment created, Metaflow always installed via pip. conda Path conda executable (applicable method = \"conda\") version Metaflow version install. Use \"default\" latest version, specify version like \"2.12.23\" \"2.11.6\". envname Name virtual/conda environment install packages . Default \"r-metaflow\". extra_packages Additional Python packages install along Metaflow restart_session Restart R session installing (RStudio) python_version Python version use. Must >= 3.8. new_env Whether create new environment use existing one ... Additional arguments passed reticulate installation functions","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/install_metaflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install Metaflow and its dependencies — install_metaflow","text":"function returns NULL invisibly. primary side effect installation Metaflow dependencies specified environment.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/install_metaflow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install Metaflow and its dependencies — install_metaflow","text":"function installs Metaflow PyPI using pip, regardless whether virtualenv Conda environment used. Conda environment specified, function create Conda environment still use pip install Metaflow within environment. function performs several checks steps: Verifies system Windows (supported) Checks sets appropriate Python version Prepares installation environment (new existing) Installs Metaflow additional specified packages","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/reference/install_metaflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install Metaflow and its dependencies — install_metaflow","text":"","code":"if (FALSE) { # \\dontrun{ install_metaflow() install_metaflow(method = \"conda\", version = \"2.3.0\") } # }"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/is_valid_metaflow_home.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a provided directory exists and contains valid config files — is_valid_metaflow_home","title":"Check if a provided directory exists and contains valid config files — is_valid_metaflow_home","text":"Check provided directory exists contains valid config files","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/is_valid_metaflow_home.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a provided directory exists and contains valid config files — is_valid_metaflow_home","text":"","code":"is_valid_metaflow_home(dir_path)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/list_profiles.html","id":null,"dir":"Reference","previous_headings":"","what":"List all profiles in Metaflow home directory — list_profiles","title":"List all profiles in Metaflow home directory — list_profiles","text":"List profiles Metaflow home directory","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/list_profiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all profiles in Metaflow home directory — list_profiles","text":"","code":"list_profiles()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/load_default_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the default Metaflow profile — load_default_profile","title":"Set the default Metaflow profile — load_default_profile","text":"Set default Metaflow profile","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/load_default_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the default Metaflow profile — load_default_profile","text":"","code":"load_default_profile()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/make_profile_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate profile name from a file path — make_profile_name","title":"Generate profile name from a file path — make_profile_name","text":"Generate profile name file path","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/make_profile_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate profile name from a file path — make_profile_name","text":"","code":"make_profile_name(path)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Metaflow for R — metaflow","title":"Metaflow for R — metaflow","text":"Metaflow open-source framework data science projects. designed handle entire lifecycle data science workflows, prototyping production deployment. Metaflow allows write manage data processing pipelines using simple, intuitive API.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metaflow for R — metaflow","text":"Metaflow API primarily implemented Python, bindings R. package provides access complete Metaflow functionality within R. Key features Metaflow include: Seamless scaling prototype production Built-versioning data code Easy integration cloud computing resources Support parallel distributed computing","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow.html","id":"documentation","dir":"Reference","previous_headings":"","what":"Documentation","title":"Metaflow for R — metaflow","text":"additional documentation Metaflow package, see https://docs.metaflow.org/v/r/","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow.html","id":"enterprise-support","dir":"Reference","previous_headings":"","what":"Enterprise Support","title":"Metaflow for R — metaflow","text":"information managed Metaflow enterprise offerings, visit Outerbounds","code":""},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Metaflow for R — metaflow","text":"Bryan Galvin (bcgalvin@gmail.com)","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the installed Metaflow version — metaflow_version","title":"Get the installed Metaflow version — metaflow_version","text":"metaflow_version() returns version installed Metaflow Python package.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the installed Metaflow version — metaflow_version","text":"","code":"metaflow_version()"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the installed Metaflow version — metaflow_version","text":"character string representing Metaflow version.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/metaflow_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the installed Metaflow version — metaflow_version","text":"","code":"metaflow_version() #> Error in metaflow_version(): Metaflow is not available. Please install Metaflow using install_metaflow()."},{"path":"https://bcgalvin.github.io/metaflow-r/reference/read_profile_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Metaflow profile configuration file — read_profile_json","title":"Read a Metaflow profile configuration file — read_profile_json","text":"Read Metaflow profile configuration file","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/read_profile_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Metaflow profile configuration file — read_profile_json","text":"","code":"read_profile_json(path)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates the Metaflow profile by name or path — update_profile","title":"Updates the Metaflow profile by name or path — update_profile","text":"Updates Metaflow profile name path","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates the Metaflow profile by name or path — update_profile","text":"","code":"update_profile(name = NULL, path = NULL)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates the Metaflow profile by name or path — update_profile","text":"name Optional. string representing profile name. path Optional. string representing path profile JSON file.","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Updates the Metaflow profile by name or path — update_profile","text":"Invisibly returns updated profile","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates the Metaflow profile by name — update_profile_name","title":"Updates the Metaflow profile by name — update_profile_name","text":"Updates Metaflow profile name","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates the Metaflow profile by name — update_profile_name","text":"","code":"update_profile_name(name)"},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates the Metaflow profile by path — update_profile_path","title":"Updates the Metaflow profile by path — update_profile_path","text":"Updates Metaflow profile path","code":""},{"path":"https://bcgalvin.github.io/metaflow-r/reference/update_profile_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates the Metaflow profile by path — update_profile_path","text":"","code":"update_profile_path(path)"},{"path":[]},{"path":"https://bcgalvin.github.io/metaflow-r/news/index.html","id":"new-features-0-0-1","dir":"Changelog","previous_headings":"","what":"New features","title":"metaflow 0.0.1 (Development version)","text":"Added install_metaflow() function easy installation Metaflow.","code":""}]
