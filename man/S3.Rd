% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s3.R
\name{S3}
\alias{S3}
\title{S3 Class}
\description{
An R6 interface to Metaflow's S3 client. This class provides methods for
interacting with S3, including connecting, listing, and retrieving objects.
It uses the S3Client class internally for AWS authentication and client management.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-S3-new}{\code{S3$new()}}
\item \href{#method-S3-connect}{\code{S3$connect()}}
\item \href{#method-S3-set_role}{\code{S3$set_role()}}
\item \href{#method-S3-set_session_vars}{\code{S3$set_session_vars()}}
\item \href{#method-S3-set_client_params}{\code{S3$set_client_params()}}
\item \href{#method-S3-print}{\code{S3$print()}}
\item \href{#method-S3-get}{\code{S3$get()}}
\item \href{#method-S3-get_many}{\code{S3$get_many()}}
\item \href{#method-S3-list_paths}{\code{S3$list_paths()}}
\item \href{#method-S3-list_recursive}{\code{S3$list_recursive()}}
\item \href{#method-S3-get_recursive}{\code{S3$get_recursive()}}
\item \href{#method-S3-get_all}{\code{S3$get_all()}}
\item \href{#method-S3-put}{\code{S3$put()}}
\item \href{#method-S3-put_many}{\code{S3$put_many()}}
\item \href{#method-S3-put_files}{\code{S3$put_files()}}
\item \href{#method-S3-clone}{\code{S3$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-new"></a>}}
\if{latex}{\out{\hypertarget{method-S3-new}{}}}
\subsection{Method \code{new()}}{
Create a new S3 object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$new(
  tmproot = ".",
  bucket = NULL,
  prefix = NULL,
  run = NULL,
  s3root = NULL,
  verbose = FALSE,
  mf = .globals[["mf"]]
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tmproot}}{Character string specifying the temporary directory root.}

\item{\code{bucket}}{Optional character string specifying the S3 bucket.}

\item{\code{prefix}}{Optional character string specifying the S3 prefix.}

\item{\code{run}}{Optional Metaflow Run object or FlowSpec.}

\item{\code{s3root}}{Optional character string specifying the S3 root path.}

\item{\code{verbose}}{Logical, if TRUE, print detailed error messages.}

\item{\code{mf}}{Metaflow object, defaults to .globals[\link{"mf"}].}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-connect"></a>}}
\if{latex}{\out{\hypertarget{method-S3-connect}{}}}
\subsection{Method \code{connect()}}{
Connect to the S3 client.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$connect()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible self (for method chaining).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-set_role"></a>}}
\if{latex}{\out{\hypertarget{method-S3-set_role}{}}}
\subsection{Method \code{set_role()}}{
Set the AWS role for the S3 client.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$set_role(role)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{role}}{Character string specifying the AWS role ARN.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self (for method chaining).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-set_session_vars"></a>}}
\if{latex}{\out{\hypertarget{method-S3-set_session_vars}{}}}
\subsection{Method \code{set_session_vars()}}{
Set the session variables for the S3 client.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$set_session_vars(session_vars)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session_vars}}{List of session variables.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self (for method chaining).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-set_client_params"></a>}}
\if{latex}{\out{\hypertarget{method-S3-set_client_params}{}}}
\subsection{Method \code{set_client_params()}}{
Set the client parameters for the S3 client.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$set_client_params(client_params)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client_params}}{List of client parameters.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self (for method chaining).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-print"></a>}}
\if{latex}{\out{\hypertarget{method-S3-print}{}}}
\subsection{Method \code{print()}}{
Print method for S3 objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Additional arguments passed to print (unused).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-get"></a>}}
\if{latex}{\out{\hypertarget{method-S3-get}{}}}
\subsection{Method \code{get()}}{
Get a single object from S3
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$get(key = NULL, return_missing = FALSE, return_info = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{Character string or S3GetObject representing the S3 key}

\item{\code{return_missing}}{Logical, if TRUE, return missing keys as S3Objects with exists = FALSE}

\item{\code{return_info}}{Logical, if TRUE, fetch content-type and user metadata}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An S3Object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-get_many"></a>}}
\if{latex}{\out{\hypertarget{method-S3-get_many}{}}}
\subsection{Method \code{get_many()}}{
Get multiple objects from S3
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$get_many(keys, return_missing = FALSE, return_info = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{Character vector or list of S3GetObjects representing the S3 keys}

\item{\code{return_missing}}{Logical, if TRUE, return missing keys as S3Objects with exists = FALSE}

\item{\code{return_info}}{Logical, if TRUE, fetch content-type and user metadata}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of S3Objects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-list_paths"></a>}}
\if{latex}{\out{\hypertarget{method-S3-list_paths}{}}}
\subsection{Method \code{list_paths()}}{
List the next level of paths in S3.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$list_paths(keys = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{Optional character vector of keys to list. If NULL, lists from the S3 root.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of \code{S3Object} representations.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-list_recursive"></a>}}
\if{latex}{\out{\hypertarget{method-S3-list_recursive}{}}}
\subsection{Method \code{list_recursive()}}{
List all objects recursively under the given prefixes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$list_recursive(keys = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{Optional character vector of keys to list. If NULL, lists from the S3 root.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of \code{S3Object} representations.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-get_recursive"></a>}}
\if{latex}{\out{\hypertarget{method-S3-get_recursive}{}}}
\subsection{Method \code{get_recursive()}}{
Get objects from S3 recursively
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$get_recursive(keys, return_info = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keys}}{Character vector of keys or prefixes to download recursively}

\item{\code{return_info}}{Logical, if TRUE, fetch content-type and user metadata}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of S3Objects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-get_all"></a>}}
\if{latex}{\out{\hypertarget{method-S3-get_all}{}}}
\subsection{Method \code{get_all()}}{
Get all objects under the prefix set in the S3 constructor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$get_all(return_info = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{return_info}}{Logical, if TRUE, fetch content-type and user metadata}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of S3Objects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-put"></a>}}
\if{latex}{\out{\hypertarget{method-S3-put}{}}}
\subsection{Method \code{put()}}{
Put a single object to S3
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$put(key, obj, overwrite = TRUE, content_type = NULL, metadata = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{Character string or S3PutObject representing the S3 key}

\item{\code{obj}}{Object to store in S3}

\item{\code{overwrite}}{Logical, if TRUE, overwrite existing object}

\item{\code{content_type}}{Optional MIME type for the object}

\item{\code{metadata}}{Optional list of metadata to store with the object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Character string of the URL of the stored object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-put_many"></a>}}
\if{latex}{\out{\hypertarget{method-S3-put_many}{}}}
\subsection{Method \code{put_many()}}{
Put multiple objects to S3
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$put_many(key_objs, overwrite = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key_objs}}{List of key-object pairs or S3PutObjects}

\item{\code{overwrite}}{Logical, if TRUE, overwrite existing objects}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of character vectors, each containing key and URL of stored object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-put_files"></a>}}
\if{latex}{\out{\hypertarget{method-S3-put_files}{}}}
\subsection{Method \code{put_files()}}{
Put multiple files to S3
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$put_files(key_paths, overwrite = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key_paths}}{List of key-path pairs or S3PutObjects}

\item{\code{overwrite}}{Logical, if TRUE, overwrite existing objects}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of character vectors, each containing key and URL of stored object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-S3-clone"></a>}}
\if{latex}{\out{\hypertarget{method-S3-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{S3$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
